Before snippet of code: main function for cluegame

public static void main(String[] args) {
		ClueGame game = new ClueGame("boardLayout.csv", "legend.txt", "cards.txt");
		game.loadConfigFiles();
		Board board = game.getBoard();
		board.calcAdjacencies();
		board.setBoardPlayers(players);
		game.add(board, BorderLayout.CENTER);
		JMenuBar menuBar = new JMenuBar();
		game.setJMenuBar(menuBar);
		menuBar.add(game.menu());
		
		game.setSize(576,660);
		game.setVisible(true);
		
	}	

After: 
public static void main(String[] args) {
		ClueGame game = new ClueGame("boardLayout.csv", "legend.txt", "cards.txt");
		game.loadConfigFiles();
	}
change1: moved jframe construction to load board config
change2: added calc adjacencies and set board players to load config files method		

Before: loadBoardConfig

public void loadBoardConfig() throws FileNotFoundException, BadConfigFormatException{
		testBoardConfig();
		testLegend();
		getRooms();
		grid = new BoardCell[numRows][numColumns];
		FileReader reader = null;
		Scanner in = null;
		try {
			reader = new FileReader(layoutFile);
			in = new Scanner(reader);
		}catch (FileNotFoundException e) {
			System.out.println(e.getLocalizedMessage());
		}
		for (int i = 0; i<numRows; ++i) {
			String line = in.nextLine();
			String[] legend = line.split(",");
			for (int j = 0; j<legend.length; ++j) {
				if (legend[j].charAt(0) == 'W') {
					WalkwayCell w = new WalkwayCell(i,j,legend[j]);
					grid[i][j] = w;
				} else if (!rooms.containsKey(legend[j].charAt(0))){
					throw new BadConfigFormatException("Bad room: doesn't exist in legend");
				} else if (legend[j].length() ==2){
					if (legend[j].charAt(1)=='R'||legend[j].charAt(1)=='L'||legend[j].charAt(1)=='U'||legend[j].charAt(1)=='D'||legend[j].charAt(1)=='N') {
						RoomCell r = new RoomCell(i,j,legend[j]);
						grid[i][j] = r;
					}else {
						throw new BadConfigFormatException("Bad door: direction does not exist");
					}
				} else {
					RoomCell r = new RoomCell(i,j,legend[j]);
					grid[i][j] = r;
				}
			}
		}
	}


After: loadBoardConfig

public void loadBoardConfig() throws FileNotFoundException, BadConfigFormatException{
		testBoardConfig();
		testLegend();
		getRooms();
		grid = new BoardCell[numRows][numColumns];
		FileReader reader = null;
		Scanner in = null;
		WalkwayCell w = null;
		RoomCell r = null;
		try {
			reader = new FileReader(layoutFile);
			in = new Scanner(reader);
		}catch (FileNotFoundException e) {
			System.out.println(e.getLocalizedMessage());
		}
		for (int i = 0; i<numRows; ++i) {
			String line = in.nextLine();
			String[] legend = line.split(",");
			for (int j = 0; j<legend.length; ++j) {
				if (legend[j].charAt(0) == 'W') {
					w = new WalkwayCell(i,j,legend[j]);
					grid[i][j] = w;
				} else if (!rooms.containsKey(legend[j].charAt(0))){
					throw new BadConfigFormatException("Bad room: doesn't exist in legend");
				} else if (legend[j].length() ==2){
					if (legend[j].charAt(1)=='R'||legend[j].charAt(1)=='L'||legend[j].charAt(1)=='U'||legend[j].charAt(1)=='D'||legend[j].charAt(1)=='N') {
						r = new RoomCell(i,j,legend[j]);
						grid[i][j] = r;
					}else {
						throw new BadConfigFormatException("Bad door: direction does not exist");
					}
				} else {
					r = new RoomCell(i,j,legend[j]);
					grid[i][j] = r;
				}
			}
		}
	}

Change3: took walkway cell constructor out of loops and added it above.
Change4: took roomcell constructor out of loops and added it above.

Before: CalcAdjacencies

	public void calcAdjacencies() {
		adjacent_cells = new HashMap<BoardCell,LinkedList<BoardCell>>();
		for (int i = 0; i<numRows; ++i) {
			for (int j = 0; j<numColumns; ++j) {
				LinkedList<BoardCell> adj = new LinkedList<BoardCell>();
				adj=getAdjList(i,j);
				adjacent_cells.put(grid[i][j], adj);
			}
		}
	}

After: CalcAdjacencies

	public void calcAdjacencies() {
		adjacent_cells = new HashMap<BoardCell,LinkedList<BoardCell>>();
		LinkedList<BoardCell> adj = new LinkedList<BoardCell>();
		for (int i = 0; i<numRows; ++i) {
			for (int j = 0; j<numColumns; ++j) {
				adj=getAdjList(i,j);
				adjacent_cells.put(grid[i][j], adj);
			}
		}
	}

Change5: moved constructor from loop to outside of loop

Before: Solution class

public class Solution {
	public String person;
	public String weapon;
	public String place;
	
	public Solution() {
		super();
	}
}

After: 

public class Solution {
	private String person;
	private String weapon;
	private String place;
	
	public Solution() {
		super();
	}

	public String getPerson() {
		return person;
	}

	public void setPerson(String person) {
		this.person = person;
	}

	public String getWeapon() {
		return weapon;
	}

	public void setWeapon(String weapon) {
		this.weapon = weapon;
	}

	public String getPlace() {
		return place;
	}

	public void setPlace(String place) {
		this.place = place;
	}
	
	
}

Change6: changed weapon person and place to private
Change7: added getters and setters to weapon, person, and place

Before: load config files

public void loadConfigFiles() {
		loadRoomConfig();
		loadCards();
}

after: 
public void loadConfigFiles() {
		loadRoomConfig();
		loadCards();
		Board board = getBoard();
		board.calcAdjacencies();
		board.setBoardPlayers(players);
		add(board, BorderLayout.CENTER);
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		menuBar.add(menu());
		
		setSize(576,660);
		setVisible(true);
	}

change8: moved board constructor and calc adjacencies and set board players outside of main method
change9: moved jframe construction outside of main method

additional changes: made quite a few changes throughout several methods to accomodate the change in the soution class where we made everything private.  Required changing solution.weapon to solution.getWeapon() etc.








